apiVersion: template.openshift.io/v1
kind: Template
metadata:
  labels:
    name: ${NAME}
  name: ${NAME}-build
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: ${NAME}
    labels:
      name: ${NAME}
- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: ${NAME}
    labels:
      name: ${NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${NAME}:${OUTPUT_IMAGE_TAG}
    resources:
      limits:
        cpu: ${CPU_LIMIT}
        memory: ${MEMORY_LIMIT}
      requests:
        cpu: ${CPU_REQUEST}
        memory: ${MEMORY_REQUEST}
    runPolicy: Serial
    source:
      contextDir: ${SOURCE_CONTEXT_DIR}
      git:
        ref: ${GIT_REF}
        uri: ${GIT_REPO_URL}
      dockerfile: |
        FROM docker-remote.artifacts.developer.gov.bc.ca/ubuntu:20.04

        ARG OP_VERSION=1.8.0
        ARG OC_VERSION=4.6

        RUN apt-get update && apt-get install -y curl unzip jq && \
            curl -o 1password.zip https://cache.agilebits.com/dist/1P/op/pkg/v$OP_VERSION/op_linux_amd64_v$OP_VERSION.zip && \
            unzip 1password.zip -d /usr/local/bin && \
            rm 1password.zip

        RUN curl -sLo /tmp/oc.tar.gz https://mirror.openshift.com/pub/openshift-v$(echo $OC_VERSION | cut -d'.' -f 1)/clients/oc/$OC_VERSION/linux/oc.tar.gz && \
            tar xzvf /tmp/oc.tar.gz -C /usr/local/bin/ && \
            rm -rf /tmp/oc.tar.gz

        RUN apt-get install -y ca-certificates git

        ### Setup user for build execution and application runtime
        ENV APP_ROOT=/opt/app-root
        ENV PATH=/usr/local/bin:${APP_ROOT}/.local/bin:${PATH} HOME=${APP_ROOT}

        RUN mkdir -p ${APP_ROOT} && \
            mkdir -p ${APP_ROOT}/scripts && \
            chmod -R u+x /usr/local/bin

        COPY ./scripts/1pass.sh ${APP_ROOT}/scripts

        RUN chmod -R u+x /usr/local/bin && \
            chmod -R u+x ${APP_ROOT}/scripts && \
            chgrp -R 0 ${APP_ROOT} && \
            chmod -R g=u ${APP_ROOT}

        ### Containers should NOT run as root as a good practice
        USER 1001

        WORKDIR ${APP_ROOT}

        CMD ["bash"]

      type: Git
    strategy:
      type: Docker
      dockerStrategy:
        pullSecret:
          name: artifactory-creds

    triggers:
    - type: ConfigChange
parameters:
- description: |
    The name assigned to all of the objects defined in this template.
    You should keep this as default unless your know what your doing.
  displayName: Name
  name: NAME
  required: true
  value: vault-service
- description: |
    The URL to your GIT repo, don't use the this default unless
    your just experimenting.
  displayName: Git Repo URL
  name: GIT_REPO_URL
  required: true
  value: https://github.com/bcgov/bcregistry-sre.git
- description: The git reference or branch.
  displayName: Git Reference
  name: GIT_REF
  required: true
  value: main
- description: The source context directory.
  displayName: Source Context Directory
  name: SOURCE_CONTEXT_DIR
  required: false
  value: vault-service
- description: The tag given to the built image.
  displayName: Output Image Tag
  name: OUTPUT_IMAGE_TAG
  required: true
  value: latest
- description: The resources CPU limit (in cores) for this build.
  displayName: Resources CPU Limit
  name: CPU_LIMIT
  required: true
  value: "2"
- description: The resources Memory limit (in Mi, Gi, etc) for this build.
  displayName: Resources Memory Limit
  name: MEMORY_LIMIT
  required: true
  value: 4Gi
- description: The resources CPU request (in cores) for this build.
  displayName: Resources CPU Request
  name: CPU_REQUEST
  required: true
  value: "1"
- description: The resources Memory request (in Mi, Gi, etc) for this build.
  displayName: Resources Memory Request
  name: MEMORY_REQUEST
  required: true
  value: 2Gi

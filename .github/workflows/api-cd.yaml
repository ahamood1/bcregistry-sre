name: API CD for GCP

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      tagname:
        type: string
      working_directory:
        type: string
        default: "."
    secrets:
      APP_NAME:
        required: true
      WORKLOAD_IDENTIFY_POOLS_PROVIDER:
        required: true
      GCP_SERVICE_ACCOUNT:
        required: true
      OP_CONNECT_URL:
        required: true
      OP_CONNECT_TOKEN:
        required: true

jobs:
  api-cd-worklfow:
    # Only allow run the CD flow in protected branch
    if: github.ref_protected == true

    environment:
      name: "${{ github.event_name == 'push' && 'dev' || inputs.environment }}"

    runs-on: ubuntu-20.04

    defaults:
      run:
        shell: bash
        working-directory: ${{ inputs.working_directory }}

    # Allow add the tag in the repo.
    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'write'
      id-token: 'write'

    steps:
      # Checkout code
      - name: Checkout out the code
        uses: actions/checkout@v3

      # GCP authentication
      - name: 'Authenticate to Google Cloud'
        id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTIFY_POOLS_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      # Setup gcloud CLI
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      # Build and push image to Google Container Registry
      - name: Build
        working-directory: ${{ inputs.working_directory }}
        run: |-
          gcloud builds submit \
            --substitutions SHORT_SHA=$(git rev-parse --short HEAD),_RELEASE_TIMESTAMP=$(date '+%Y%m%d%H%M'),_OP_CONNECT_HOST=${{ env.OP_CONNECT_HOST }},_OP_CONNECT_TOKEN=${{ env.OP_CONNECT_TOKEN }} \
            --config devops/cloudbuild.yaml
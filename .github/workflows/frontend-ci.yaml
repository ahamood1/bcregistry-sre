name: Frontend Application CI

on:
  workflow_call:
    inputs:
      app_name:
        required: true
        type: string
      working_directory:
        type: string
        default: "."
      codecov_flag:
        type: string

jobs:
  linting:
    strategy:
      fail-fast: true
      matrix:
        os: [ "ubuntu-latest" ]
        node-version: [20]
        pnpm-version: [8]

    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash
        working-directory: ${{ inputs.working_directory }}

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        name: Install pnpm
        with:
          version: ${{ matrix.pnpm-version }}
          run_install: false

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
          cache-dependency-path: ${{ inputs.working_directory }}/pnpm-lock.yaml

      - name: Install dependencies
        run: pnpm install

      - name: Linting
        run: |
          pnpm run lint

  unit-testing:
    needs: linting

    strategy:
      fail-fast: true
      matrix:
        os: [ "ubuntu-latest" ]
        node-version: [20]
        pnpm-version: [8]

    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash
        working-directory: ${{ inputs.working_directory }}

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        name: Install pnpm
        with:
          version: ${{ matrix.pnpm-version }}
          run_install: false

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
          cache-dependency-path: ${{ inputs.working_directory }}/pnpm-lock.yaml


      - name: Install dependencies
        run: pnpm install

      - name: Testing
        run: |
          pnpm run test

      - uses: actions/upload-artifact@v4
        with:
          name: coveragefile
          path: ./notify-api/coverage.xml

  code-coverage:
    needs: unit-testing

    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@v4
      with:
        name: coveragefile

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: coverage.xml
        flags: ${{ inputs.codecov_flag }}
        name: codecov-${{ inputs.app_name }}
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: false

  verify-build:
    needs: linting

    strategy:
      fail-fast: true
      matrix:
        os: [ "ubuntu-latest" ]
        node-version: [20]
        pnpm-version: [8]

    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash
        working-directory: ${{ inputs.working_directory }}

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        name: Install pnpm
        with:
          version: ${{ matrix.pnpm-version }}
          run_install: false

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
          cache-dependency-path: ${{ inputs.working_directory }}/pnpm-lock.yaml

      - name: Install dependencies
        run: pnpm install

      - name: Verify build
        run: |
          pnpm run build-check